// Типы данных и переменные

// Перечислите известные типы данных в JS:
строка, буль, число, null, undefined, объект
// Создайте var-переменную с именем name и запишите в эту переменную ваше имя
// Выведите значение созданной переменной на экран
// Ниже, запишите в созданную переменную новое значение с именем вашего друга/подруги
// Выведите новое значение на экран
// Убедитесь, что в обоих случаях выводится верное значение
var name = 'Николай';
alert(name);
name = 'Сергей';
alert(name);
// Условный оператор if

// Напишите условный оператор if и передайте ему любое истинное утверждение
// Пусть ваш условный оператор выводит в консоль любую фразу, если оператору передано истинное выражение
// Передайте оператору любое ложное утверждение и убедитесь, что фраза перестала выводиться на экран
// При помощи else модифицируйте условные оператор так, чтобы в случае ложного утверждения тоже что-то выводилось на экран
if(2===2) {
  console.log('true')
} else {
  console.log('false')
}

// Циклический оператор for:

// Создайте циклический оператор for.
// Сделайте так, чтобы его тело выполнялось 10 раз
// В теле цикла выведите значение счетчика
for (var i = 0; i < 10; i++) {
  console.log (i);
}
// Функции:

// Создайте функцию sum, которая принимает три параметр: p1, p2, p3
// Внутри функции сложите значение трех параметров и запишите результат в новую переменную
// Верните значение этой переменной из функции
// После того, как опишете функцию, вызовите ее и передайте ей 10, 20 и 30 в качестве аргументов
// Создайте переменную и результат вызовы функции запишите в переменную и выведите значение переменной на экран
// Убедитесь, что на экран выводится сумма переданных аргументов
// Ниже повторно проделайте вызов функции и вывод результата на экран, но каждый раз передавайте функции разные аргументы
// Убедитесь, что каждый раз выводится сумма переданных аргументов
function summ(p1, p2, p3) {
  var result = p1 + p2 + p3;
  return result;
}
var g = summ(10, 20, 30);
alert(g);



// Массивы и объекты:
// Задание 1:
// Создайте переменную и запишите в нее массив из двух элементов ‘привет’ и ‘loftschool’
// Ниже, при помощи push, добавьте в этот массив еще два элемента: ‘, я изучаю’ и ‘javascript’
// Ниже, выедите в консоль итоговой размер массива.
// Ниже, при помощи for выведите все элементы массива в консоль
var arr = ['привет', 'loftschool'];

arr.push('я изучаю', 'javascript');

console.log(arr.length);

for (var i = 0; i < arr.length; i++) {
  console.log(arr[i]);
}
// Задание 2:
// Создайте переменную с массивом и добавьте в этот массив 10 разных чисел. Пусть некоторый числа будут меньше чем 100, а некоторые больше чем 100. Цифры можно добавлять не по порядку
// При помощи цикла for переберите все числа в массиве и при помощи оператор if внутри тела цикла, выведите в консоль только те числа из массива, которые больше чем 100
var arr = [25, 144, 44, 212, 321, 33, 32, 121, 101, 22];

for (let i = 0; i < arr.length; i++) {
  if(arr[i] > 100) {
    console.log(arr[i]);
  }
}
// Задание 3:
// Создайте переменную и запишите в нее объект
// Пусть в этом объекте будут 3 свойства: name, lastName и age
// В свойство name запишите свое имя
// В свойство lastName запишите свою фамилию
// В свойство age запишите свой возраст
// Ниже обратитесь к каждому свойству и выведите значения всех свойств в консоль
// Ниже добавьте в объект любое новое свойство и выведите его значение на экран
 var obj = {
   name : 'Николай',
   lastName : 'Ковылин',
   age : 30
 };

console.log(obj.name);
console.log(obj.lastName);
console.log(obj.age);

  obj.city = 'moscow';

  alert(obj.city);

// Задание 4:
// Создайте функцию с именем hello и параметром human.
// Напишите код вашей функции так, чтобы она возвращала фразу ‘Привет, меня зовут ИМЯ ФАМИЛИЯ и мне ВОЗРАСТ лет!’.
// Вместо ИМЯ нужно подставить значение свойства name из объекта, который вы передадите в human
// Вместо ФАМИЛИЯ нужно подставить значение свойства lastName из объекта, который вы передадите в human
// Вместо ВОЗРАСТ нужно подставить значение свойства name из объекта, который вы передадите в age
// Ниже вызовите созданную функцию и перейдите ей в качестве аргумента объект, который вы создали в предыдущем задании
// Результат вызова функции запишите в переменную и выведите ее значение на экран
// Подсказка: для того, чтобы объединять строки со значениями переменных, можно использовать оператор ‘+’, например ‘Привет ’ + name

function hello(human) {
  //return 'Привет, меня зовут ' +human.name+' '+human.lastName+' и мне '+human.age+' лет';
  return `Привет, меня зовут ${human.name} ${human.lastName} и мне ${human.age} лет`;
}
var res = hello({name : 'Николай', lastName : 'Ковылин', age : 30});
console.log(res);
// Самостоятельная работа:
// Изучите что делает ключевое слово break внутри цикла for:
// Познакомьтесь с операторами switch и while

/////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Задачи по работе c DOM
/////////////////////////////////////////////////////////////////////////////////////////////////////


// Задание 1:

// При помощи DOM API создайте DOM-элемент с тегом div
// Добавьте созданный элемент в DOM-дерево
// При помощи DOM API, поместите в элемент текст: 'Этот элемент создан при помощи DOM API'
const elem = document.createElement('div');

document.body.appendChild(elem);
elem.textContent = 'Этот элемент создан при помощи DOM API';
// Задание 2:

// При помощи DOM API создайте элемент с тегом div
// Задайте созданному элементу класс 'inner'
// При помощи DOM API, поместите в элемент текст: 'Этот элемент тоже создан при помощи DOM API'
// Поместите созданный элемент внутрь элемента, который был создан в предыдущем задании

// В результате должна получиться такая HTML-структура:
// <div>
//   Этот элемент создан при помощи DOM API
//   <div class='inner'>
//     Этот элемент тоже создан при помощи DOM API
//   </div>
// </div>
const elem2 = document.createElement('div');
elem2.classList.add('inner');
elem2.textContent = 'Этот элемент тоже создан при помощи DOM API';
elem.appendChild(elem2);
// Задание 3:

// Возьмите код из предыдущего задания и при помощи DOM API задайте созданному элементу CSS-стиль 'color: red'
elem2.style.color = 'red';
// Заданий 4:

// Возьмите код первого задания
// Добавьте обработчик события click на созданный элемент
// При клике на элемент, в консоль должен выводиться текст: 'Этот текст говорит о том, что я всё сделал правильно'
// Откройте страничку в браузере
// Кликните на элемент
// Убедитесь, что после клика на элемент в консоли появилась надпись с текстом 'Этот текст говорит о том, что я всё сделал правильно'
elem.addEventListener('click', function() {
  console.log('Этот текст говорит о том, что я всё сделал правильно');
});






// Задание 5:

// При помощи DOM API создайте элемент с тегом a
// Задайте созданному элементу атрибут href и запишите в этот атрибут значение  'https://loftschool.com'
// Добавьте созданный элемент в DOM-дерево
// Добавьте обработчик события click на созданный элемент
// Напишите код обработчика таким образом, чтобы при клике на созданный элемент в консоли выводилась надпись 'Я кликнул на ссылку HREF'. Вместо HREF необходимо подставить значение атрибута href. Но перехода по ссылке быть не должно.
var elem = document.createElement('a');
elem.textContent = 'Клик сЮда';
elem.setAttribute('href', 'https://loftschool.com');
document.body.appendChild(elem);
elem.addEventListener('click', function(e) {
  e.preventDefault();
  console.log('Я кликнул на ссылку ' + e.target.href);
});
// Задание 6:

// При помощи DOM API создайте input и button
// Поместите созданные элементы на страницу
// При клике на кнопку необходимо выводить в консоль значение из текстового поля
var elem = document.createElement('input');
 document.body.appendChild(elem);

 var elem2 = document.createElement('button');
 elem2.textContent = 'Кnopka';
 document.body.appendChild(elem2);
 elem2.addEventListener('click', function () {
   console.log(elem.value);
 });
// Задание 7:
right.addEventListener("click", function() {

  if (parseInt(getComputedStyle(items).left) > -500) {
    items.style.left=parseInt(getComputedStyle(items).left)-100+'px';
  }

});

left.addEventListener("click", function() {

if (parseInt(getComputedStyle(items).left) !== 0) {
  items.style.left=parseInt(getComputedStyle(items).left)+100+'px';
}

});
// Возьмите за основу следующий каркас - https://codepen.io/smelukov/pen/mXdJZw
// Это простейший слайдер элементов. При клике на правую стрелочку, элементы должны сдвигаться вправо. При клике на левую стрелочку, элементы должны сдвигаться влево.
// Наполните кодом пустые обработчики кликов таким образом, чтобы стрелочки работали корректно.


// Подсказка: Для выполнения задания, вам потребуется самостоятельно изучить две функции (они понадобятся вам для решения задачи):
// parseInt
// getComputedStyle

// Описание этих функций, а так же подробную документацию по javaScript вы сможете найти на портале https://developer.mozilla.org/ru/docs/Web/JavaScript
